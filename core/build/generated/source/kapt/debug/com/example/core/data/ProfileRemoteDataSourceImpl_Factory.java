// Generated by Dagger (https://dagger.dev).
package com.example.core.data;

import android.content.Context;
import com.google.firebase.auth.FirebaseAuth;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class ProfileRemoteDataSourceImpl_Factory implements Factory<ProfileRemoteDataSourceImpl> {
  private final Provider<Context> contextProvider;

  private final Provider<FirebaseAuth> mFirebaseAuthProvider;

  public ProfileRemoteDataSourceImpl_Factory(Provider<Context> contextProvider,
      Provider<FirebaseAuth> mFirebaseAuthProvider) {
    this.contextProvider = contextProvider;
    this.mFirebaseAuthProvider = mFirebaseAuthProvider;
  }

  @Override
  public ProfileRemoteDataSourceImpl get() {
    return newInstance(contextProvider.get(), mFirebaseAuthProvider.get());
  }

  public static ProfileRemoteDataSourceImpl_Factory create(Provider<Context> contextProvider,
      Provider<FirebaseAuth> mFirebaseAuthProvider) {
    return new ProfileRemoteDataSourceImpl_Factory(contextProvider, mFirebaseAuthProvider);
  }

  public static ProfileRemoteDataSourceImpl newInstance(Context context,
      FirebaseAuth mFirebaseAuth) {
    return new ProfileRemoteDataSourceImpl(context, mFirebaseAuth);
  }
}

// Generated by view binder compiler. Do not edit!
package com.example.home.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.home.R;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final CardView cvCat1;

  @NonNull
  public final CardView cvCat2;

  @NonNull
  public final CardView cvCat3;

  @NonNull
  public final CardView cvCat4;

  @NonNull
  public final ShapeableImageView ibProfilhome;

  @NonNull
  public final ImageView ivCat1;

  @NonNull
  public final ImageView ivCat2;

  @NonNull
  public final ImageView ivCat3;

  @NonNull
  public final ImageView ivCat4;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final RecyclerView rvPemberitahuan;

  @NonNull
  public final RecyclerView rvPopuler;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView tvCat1;

  @NonNull
  public final TextView tvCat2;

  @NonNull
  public final TextView tvCat3;

  @NonNull
  public final TextView tvCat4;

  @NonNull
  public final TextView tvDuedate;

  @NonNull
  public final TextView tvPemberitahuan;

  @NonNull
  public final View view;

  private FragmentHomeBinding(@NonNull NestedScrollView rootView, @NonNull CardView cvCat1,
      @NonNull CardView cvCat2, @NonNull CardView cvCat3, @NonNull CardView cvCat4,
      @NonNull ShapeableImageView ibProfilhome, @NonNull ImageView ivCat1,
      @NonNull ImageView ivCat2, @NonNull ImageView ivCat3, @NonNull ImageView ivCat4,
      @NonNull LinearLayout linearLayout, @NonNull RecyclerView rvPemberitahuan,
      @NonNull RecyclerView rvPopuler, @NonNull TextView textView, @NonNull TextView textView2,
      @NonNull TextView textView3, @NonNull TextView tvCat1, @NonNull TextView tvCat2,
      @NonNull TextView tvCat3, @NonNull TextView tvCat4, @NonNull TextView tvDuedate,
      @NonNull TextView tvPemberitahuan, @NonNull View view) {
    this.rootView = rootView;
    this.cvCat1 = cvCat1;
    this.cvCat2 = cvCat2;
    this.cvCat3 = cvCat3;
    this.cvCat4 = cvCat4;
    this.ibProfilhome = ibProfilhome;
    this.ivCat1 = ivCat1;
    this.ivCat2 = ivCat2;
    this.ivCat3 = ivCat3;
    this.ivCat4 = ivCat4;
    this.linearLayout = linearLayout;
    this.rvPemberitahuan = rvPemberitahuan;
    this.rvPopuler = rvPopuler;
    this.textView = textView;
    this.textView2 = textView2;
    this.textView3 = textView3;
    this.tvCat1 = tvCat1;
    this.tvCat2 = tvCat2;
    this.tvCat3 = tvCat3;
    this.tvCat4 = tvCat4;
    this.tvDuedate = tvDuedate;
    this.tvPemberitahuan = tvPemberitahuan;
    this.view = view;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cv_cat1;
      CardView cvCat1 = ViewBindings.findChildViewById(rootView, id);
      if (cvCat1 == null) {
        break missingId;
      }

      id = R.id.cv_cat2;
      CardView cvCat2 = ViewBindings.findChildViewById(rootView, id);
      if (cvCat2 == null) {
        break missingId;
      }

      id = R.id.cv_cat3;
      CardView cvCat3 = ViewBindings.findChildViewById(rootView, id);
      if (cvCat3 == null) {
        break missingId;
      }

      id = R.id.cv_cat4;
      CardView cvCat4 = ViewBindings.findChildViewById(rootView, id);
      if (cvCat4 == null) {
        break missingId;
      }

      id = R.id.ib_profilhome;
      ShapeableImageView ibProfilhome = ViewBindings.findChildViewById(rootView, id);
      if (ibProfilhome == null) {
        break missingId;
      }

      id = R.id.iv_cat1;
      ImageView ivCat1 = ViewBindings.findChildViewById(rootView, id);
      if (ivCat1 == null) {
        break missingId;
      }

      id = R.id.iv_cat2;
      ImageView ivCat2 = ViewBindings.findChildViewById(rootView, id);
      if (ivCat2 == null) {
        break missingId;
      }

      id = R.id.iv_cat3;
      ImageView ivCat3 = ViewBindings.findChildViewById(rootView, id);
      if (ivCat3 == null) {
        break missingId;
      }

      id = R.id.iv_cat4;
      ImageView ivCat4 = ViewBindings.findChildViewById(rootView, id);
      if (ivCat4 == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.rv_pemberitahuan;
      RecyclerView rvPemberitahuan = ViewBindings.findChildViewById(rootView, id);
      if (rvPemberitahuan == null) {
        break missingId;
      }

      id = R.id.rv_populer;
      RecyclerView rvPopuler = ViewBindings.findChildViewById(rootView, id);
      if (rvPopuler == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.tv_cat1;
      TextView tvCat1 = ViewBindings.findChildViewById(rootView, id);
      if (tvCat1 == null) {
        break missingId;
      }

      id = R.id.tv_cat2;
      TextView tvCat2 = ViewBindings.findChildViewById(rootView, id);
      if (tvCat2 == null) {
        break missingId;
      }

      id = R.id.tv_cat3;
      TextView tvCat3 = ViewBindings.findChildViewById(rootView, id);
      if (tvCat3 == null) {
        break missingId;
      }

      id = R.id.tv_cat4;
      TextView tvCat4 = ViewBindings.findChildViewById(rootView, id);
      if (tvCat4 == null) {
        break missingId;
      }

      id = R.id.tv_duedate;
      TextView tvDuedate = ViewBindings.findChildViewById(rootView, id);
      if (tvDuedate == null) {
        break missingId;
      }

      id = R.id.tv_Pemberitahuan;
      TextView tvPemberitahuan = ViewBindings.findChildViewById(rootView, id);
      if (tvPemberitahuan == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      return new FragmentHomeBinding((NestedScrollView) rootView, cvCat1, cvCat2, cvCat3, cvCat4,
          ibProfilhome, ivCat1, ivCat2, ivCat3, ivCat4, linearLayout, rvPemberitahuan, rvPopuler,
          textView, textView2, textView3, tvCat1, tvCat2, tvCat3, tvCat4, tvDuedate,
          tvPemberitahuan, view);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

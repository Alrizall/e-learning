// Generated by Dagger (https://dagger.dev).
package com.example.profil;

import com.example.core.data.ProfileRemoteDataSource;
import com.example.core.local.PreferenceHelper;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class ProfilViewModel_Factory implements Factory<ProfilViewModel> {
  private final Provider<PreferenceHelper> preferenceHelperProvider;

  private final Provider<ProfileRemoteDataSource> profileRemoteDataSourceProvider;

  public ProfilViewModel_Factory(Provider<PreferenceHelper> preferenceHelperProvider,
      Provider<ProfileRemoteDataSource> profileRemoteDataSourceProvider) {
    this.preferenceHelperProvider = preferenceHelperProvider;
    this.profileRemoteDataSourceProvider = profileRemoteDataSourceProvider;
  }

  @Override
  public ProfilViewModel get() {
    return newInstance(preferenceHelperProvider.get(), profileRemoteDataSourceProvider.get());
  }

  public static ProfilViewModel_Factory create(Provider<PreferenceHelper> preferenceHelperProvider,
      Provider<ProfileRemoteDataSource> profileRemoteDataSourceProvider) {
    return new ProfilViewModel_Factory(preferenceHelperProvider, profileRemoteDataSourceProvider);
  }

  public static ProfilViewModel newInstance(PreferenceHelper preferenceHelper,
      ProfileRemoteDataSource profileRemoteDataSource) {
    return new ProfilViewModel(preferenceHelper, profileRemoteDataSource);
  }
}
